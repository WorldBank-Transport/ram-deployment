AWSTemplateFormatVersion: '2010-09-09'
Description: 'stack: ram-deploy-cf | deployed by Kes'

Resources:
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ram-deploy-cf-ecs
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ECSRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:GetMetricStatistics
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:GetAuthorizationToken
                  - ecr:GetDownloadUrlForLayer
                  - ecs:DeregisterContainerInstance
                  - ecs:DescribeClusters
                  - ecs:DescribeContainerInstances
                  - ecs:DescribeServices
                  - ecs:DiscoverPollEndpoint
                  - ecs:ListContainerInstances
                  - ecs:ListServices
                  - ecs:ListTaskDefinitions
                  - ecs:ListTasks
                  - ecs:Poll
                  - ecs:RegisterContainerInstance
                  - ecs:RunTask
                  - ecs:StartTelemetrySession
                  - ecs:Submit*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource: "*"

              # Allow writing to ingest buckets
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:Get*
                  - s3:Put*
                  - s3:List*
                  - s3:DeleteObject
                  - s3:DeleteObjectVersion
                Resource:
                  - arn:aws:s3:::ram-cf-bucket
                  - arn:aws:s3:::ram-cf-bucket/*


  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ram-deploy-cf-ecs
      Path: "/"
      Roles:
        - !Ref ECSRole

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ram-deploy-cf-ecs-securitygroup
      GroupDescription: Security Group for ECS containter instances of ram-deploy-cf
      Tags:
        - Key: Name
          Value: "ram-deploy-cf"
      VpcId: vpc-dfe524ba

  ECSCluster:
    Type: AWS::ECS::Cluster

  ContainerInstanceLaunch:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            01_add_instance_to_cluster:
              command: 
                Fn::Sub: |
                  #!/bin/bash
                  echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
                  
          files:
            "/etc/cfn/cfn-hup.conf":
              content:
                Fn::Sub: |
                  [main]
                  stack=${AWS::StackId}
                  region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content:
                Fn::Sub: |
                  [cfn-auto-reloader-hook]
                  triggers=post.update
                  path=Resources.ContainerInstanceLaunch.Metadata.AWS::CloudFormation::Init
                  action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource ContainerInstanceLaunch --region ${AWS::Region}
                  runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - "/etc/cfn/cfn-hup.conf"
                - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
    Properties:
      SecurityGroups:
        - Fn::GetAtt:
          - SecurityGroup
          - GroupId
      ImageId: ami-aff65ad2
      InstanceType: t2.small
      IamInstanceProfile:
        Fn::GetAtt:
          - InstanceProfile
          - Arn
      BlockDeviceMappings:
      - DeviceName: "/dev/xvda"
        Ebs:
          DeleteOnTermination: true
          VolumeSize: 30
      KeyName: ruralroads
      UserData:
        "Fn::Base64":
          Fn::Join:
            - ""
            - - "#cloud-config\n"
              - "\nruncmd:\n"
              - " - yum install -y aws-cfn-bootstrap\n"
              - Fn::Sub: " - /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource ContainerInstanceLaunch --region ${AWS::Region}\n"
              - Fn::Sub: " - /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}"


  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 0
    Properties:
      AvailabilityZones:
        - us-east-1f
      LaunchConfigurationName:
        Ref: ContainerInstanceLaunch
      MinSize: '0'
      MaxSize: 2
      DesiredCapacity: 2
      Tags:
      - Key: Name
        Value: "ram-deploy-cf-ecs"
        PropagateAtLaunch: true
