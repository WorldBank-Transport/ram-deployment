default:
  stackName: ram-deploy-cf
  bucket: ram-cf-bucket 
  capabilities:
    - CAPABILITY_NAMED_IAM

  vpc:
    id: vpc-dfe524ba
    subnet: subnet-7945cb75

  rds:
    type: db.t2.small
    username: rra
    password: '{{DB_PASSWORD}}'
    dbName: rra
    engine: postgres
    version: '9.6.8'
    storage: 20

  # instances created by this config are configured to work with ECS service
  ecs:
    publicIp: true # whether the ec2 instance have public IP addresses
    availabilityZone: us-east-1f # IMPORTANT: subnet and availability zone must be in the same zone
    amiid: ami-5253c32d	 # which ec2 AMI to use for the ec2 instances
    keyPairName: ruralroads # the ssh key to use for login into instance
    # only uncomment this if autoscaling ec2 support is needed
    # autoscaling:
    #   instanceType: t2.small # size of the ec2 instance
    #   volumeSize: 30 # the size of the storage on the ec2 instance
    #   maxInstances: 0
    #   desiredInstances: 0
    ec2:
      api:
        instanceType: t2.small # size of the ec2 instance
        volumeSize: 30

  taskDefinitions:
    ram:
      count: 0 
      networkMode: null
      volume:
        name: pos
        path: /var/lib/postgresql/data # this is the path on the source machine
      containers:
        ram-api:
          image: wbtransport/rra-api:latest-dev
          #cpu: 10 # this is an optional key
          memory: 500 # defaults to 256mb
          ports:
            - host: 80
              container: 4000 
              protocol: tcp
          commands:
            - node
            - index.js
          includeRds: true # set to true if RDS is used
          envs:
            ANL_CONTAINER: wbtransport/rra-analysis:latest-dev
            ANL_SERVICE: hyper
            ANL_DB: 'postgresql://rra:rra@{{ANL_IP_ADDRESS}}:5432/rra'
            DS_ENV: staging
            HYPER_ACCESS: '{{HYPER_ACCESS}}'
            HYPER_SECRET: '{{HYPER_SECRET}}'
            HYPER_SIZE: L3
            STORAGE_BUCKET: '{{STORAGE_BUCKET}}'
            STORAGE_REGION: '{{STORAGE_REGION}}'
            STORAGE_ACCESS_KEY: '{{STORAGE_ACCESS_KEY}}'
            STORAGE_SECRET_KEY: '{{STORAGE_SECRET_KEY}}'
            VT_SERVICE: hyper
            VT_CONTAINER: wbtransport/rra-vt:latest-stable

            # uncomment this part if a docker container is used as db 
            # DB_CONNECTION: 'postgresql://rra:rra@ram-postgis:5432/rra'
          # links:
            # - ram-postgis
        
        # uncomment this part only if you are not going to use RDS
        # ram-postgis:
        #   image: mdillon/postgis
        #   memory: 500 # defaults to 256mb
        #   ports:
        #     - host: 5432
        #       container: 5432
        #       protocol: tcp
        #   mount:
        #     volume: pos
        #     destination: /var/lib/postgresql/data
        #   envs:
        #     POSTGRES_DB: rra
        #     POSTGRES_PASSWORD: rra
        #     POSTGRES_USER: rra

  tags:
    project: ruralroads

ds-staging:
  stackName: ram-staging-deploy-cf

aj-staging:
  stackName: aj-ram-staging
